stages:
  - prepare
  - build
  - docker

image: node:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - corepack enable
  - corepack prepare pnpm@latest --activate
  - pnpm install --frozen-lockfile

eslint:
  stage: prepare
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - pnpm lint
  artifacts:
    reports:
      codequality: gl-codequality.json

build:
  stage: build
  cache:
    paths:
      - node_modules/
    policy: pull
  dependencies:
    - eslint
  script:
    - pnpm build

build-and-push-web-image:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "${GHCR_PAT}" | docker login ghcr.io -u "${GHCR_USR}" --password-stdin
  script:
    - docker build -t ghcr.io/${GHCR_USR}/bmhk2025-web:latest -f apps/web/Dockerfile .
    - docker push ghcr.io/${GHCR_USR}/bmhk2025-web:latest
  only:
    - main

build-and-push-api-image:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "${GHCR_PAT}" | docker login ghcr.io -u "${GHCR_USR}" --password-stdin
  script:
    - docker build -t ghcr.io/${GHCR_USR}/bmhk2025-api:latest -f apps/api/Dockerfile .
    - docker push ghcr.io/${GHCR_USR}/bmhk2025-api:latest
  only:
    - main
